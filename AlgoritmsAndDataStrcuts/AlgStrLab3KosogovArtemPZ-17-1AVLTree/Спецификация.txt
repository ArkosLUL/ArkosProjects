 Общая (с обработкой исключительных ситуаций) реализация целочисленных    
                              AVL деревьев	                   					
     (представление - объект (object))                                      
=====================================================================================================
                           СПЕЦИФИКАЦИЯ                                     
                        абстракции данных                                   
                   	  "AVL деревья"                           
                                                                            
   AVL = DATA TYPE IS AVL, Add, Delete, Find, IsEmpty
                  
                                                                            
   ОПИСАНИЕ                                                                 
                                                                            
      AVL деревья — сбалансированное по высоте двоичное дерево поиска:
	 для каждой вершины которого
	 высота его двух поддеревьев различается не более чем на 1.             
	 AVL деревья ИЗМЕНЯЕМЫЕ: операции Add и Delete  
         добавляют и удаляют элементы из AVL.                      
                                                                            
   ОПЕРАЦИИ                                                                 
                                                                            
       AVL()  //конструктор                                                 
         EFFECTS Инициализирует пустое дерево AVL            
                                                                            
       void Add(int data)                                             
         MODIFIES this                                                      
         EFFECTS  Добавляет data в дерево.                            
                                                                            
      void Delete(int target)                                               
         MODIFIES this                                                      
         EFFECTS ЕСЛИ Find(target) ТО                                        
                    Удалаяет элемент из дерева И сигнализирует Ok.   
                 ИНАЧЕ                                                      
                    Сигнализирует Element does not exsists.                                 
                 ВСЕ-ЕСЛИ                                                   
            
      Node Find(int key)
	  EFFECTS ЕСЛИ Find(int target, Node current, ref Node res) != null ТО                                        
                    Рекурсивно обходит дерево.
		    Возвращает ссылку на найденный элемент.
                 ИНАЧЕ                                                      
                    Сигнализирует Element does not exsists.                                
                 ВСЕ-ЕСЛИ
                                                                                                                                                                                                                                                                                                                                                            
	void Delete()
		MODIFIES this
		EFFECTS Убирает ссылку с корня (root) дерева, уничтожая все дерево.                                                                                                                                
	
	void OpenFile()														}
		EFFECTS ЕСЛИ результат диалога DialogResult == OK ТО								}
			Считывает данные построчно,										}
			создает дерево, ковертирует данные из символьных в целочисленные
			и добавляет в него элементы посредством операции Add.					}
			ВСЕ-ЕСЛИ												}
		SIGNALS Неверный формат файла или структуры в нём.
			Неудачная ковертация данных. 	

	Node Balance_tree(Node current)
		MODIFIES this
		EFFECTS ЕСЛИ balance_factor > 1 ТО
				ЕСЛИ  balance_factor.current.left > 0 ТО
					Поворачивает дерево налево-налево
				ИНАЧЕ   
					Поворачивает дерево налево-направо
				ВСЕ-ЕСЛИ
			ИНАЧЕ 
				ЕСЛИ balance_factor > -1 
					ЕСЛИ  balance_factor.current.right > 0 ТО
						Поворачивает дерево направо-налево
					ИНАЧЕ   
						Поворачивает дерево направо-направо
					ВСЕ-ЕСЛИ                                      
                                                                            
--------------------------------------------------------------------------------------------------------
	foreach = GENERATOR TYPE IS public IEnumerator<T> GetEnumerator()           
                                                                            
       ОПИСАНИЕ                                                             
                                                                            
       Итератор foreach используются для выполнения итераций по элементам   
          дерева класса AVL. Элементы дерева выдаются 
          последовательно в порядке от корня (root) до листьев.                                             
                                                                            
	ОПЕРАЦИИ                                                                
                                                                            
	public IEnumerator<T> GetEnumerator()
		Effects Реализует интерфейс IEnumerable<T>,который позволяет
			использовать итератор foreach(особенность языка С#),
			для перебора элементов в дереве.                                                 
--------------------------------------------------------------------------------------------------------
========================================================================================================                                                                            	                                
   END  AVL                                                            

